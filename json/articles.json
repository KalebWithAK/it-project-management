[
  {
    "title": "12 Principles of Agile",
    "img": "12-agile-principles.png",
    "content": "Ensuring customer satisfaction through continuous and early delivery of impactful software is the highest priority. Customers will typically have an idea of how they want their software product to function and/or look but never all of the details. Giving the customer functional software in segments throughout the development process allows them to give feedback and change requirements if the project is not going in a direction they like. Although it may seem like a bad thing, this allows the team to make changes on portions of software rather than the entire finished result of the project. This also allows the customer to see progress, which is vitally important to keeping them happy. Accept and welcome changes in requirements at any stage of development, even the later stages. Agile processes improve the customer’s competitive advantage by using change. Changes in requirements can occur for a variety of reasons. The customer could have a change in specific needs the software product will fulfill. The users may need more functionality or a simpler design. The current requirements may not be possible to deliver on considering the time and cost constraints. As an agile team leader, you must be able to adapt to changing requirements as they can come at any time in the development process. You must also be able to quickly relay changes in requirements to your team and redesign the project. Deliver software that is functional quickly and often. Time frames vary from a couple of weeks to several months. Shorter time frames are typically preferred over longer ones. Software deliverables must be able to function on their own within their given timeframe. This allows for feedback from sponsors, as mentioned earlier. Continuous deployment also allows for feedback from users. Business professionals as well as developers must work together on a daily basis over the course of the project’s development. As an agile team leader, it is your job to be the bridge between the business and technical personnel involved in the project. This means being able to understand and sometimes assist with development. You must also be able to communicate technical information such as issues, progress, etc with business professionals. You must also be able to communicate business needs and causes for changes in requirements to your team. Being able to bridge the gap in technical vs. business knowledge is your most vital task. Projects must be built around motivated people. Agile team leads should provide the environment and support necessary to accomplish their tasks. Leads must also trust their team members to execute quality work. Your team members are the lifeblood of your project. Without an environment that motivates them and gives them space to get work done, how can you expect them to remain effective? This is where your previously mentioned communication skills come in. You have the power to tell business professionals what is necessary to build an environment that allows your team to execute the project. You can also manage burnout as this leads to a lack of motivation and therefore a harder time getting work done. Face to face conversation is consistently the best way to convey information and communicate within a development team. Although we live in the 21st century with phones and video calling technology, face to face is hands down the most effective communication method between agile teams. You are more effectively able to solve problems because of the ability to collaborate on a white board or using one person’s computer to debug. Additionally, many things that make face to face communication so effective, like body language, are lost even over video meetings. Face to face is the best way to make sure everyone is on the same page and resolve disagreements when they arise. Software that is functional is the main measure of progress. Agile methodology focuses on delivering working chunks of software. While you can use other metrics to measure progress, functional software will show you, your team, and the customer how much has been completed and how much work is left to be done. Developed and tested software must be delivered in order to get customer and user feedback which is why there is such an emphasis on delivering functional software. Users cannot provide valuable feedback on something that does not work. Agile makes the development process sustainable.  The sponsors, developers, and users should theoretically be able to maintain their pace indefinitely. If you find yourself or your team members burning out or pleading for the relief of being finished with the project, you are not executing agile effectively. You must spread the workload out in a way that is reasonable for your team, the sponsors, and yourself. While there is an expected delivery date for the final product, changes can occur at any time that can push that date further into the future. The environment and workload for agile must be set up in a way that is manageable for everyone involved. Agility is enhanced by repeated attention to technical excellence and good design. You will save a lot of time if you focus a lot of attention on good design. Additionally, your project should be designed in a way that allows for changes in requirements in the future. Technical excellence will help cut down on errors in the future which will also save time for both you and your team. Simplicity – doing as little work as possible to accomplish a task effectively – is a must in agile development environments. Teams that self-organize often create the best architectures, designs, and requirements. Self-organized teams are able to create the best architectures, designs, and requirements because they are intimately familiar with the technical and non-technical details of the project. Good architecture stems from good requirements. Good requirements originate from people with a deep understanding of the problem they are attempting to solve while also understanding the current capabilities of technology. Good designs come from people who are passionate about what they are working on and having the freedom to execute however they want. The team regularly reflects on their current effectiveness and how to improve in the future. The team then adjusts its practices according to the results of reflection. When you reflect on the prior sprint with your team, you should discuss any challenges in communication, workload, and the environment that may be preventing your team from reaching its full potential on the project. You should also elaborate on what things your team is doing well to execute effectively. These reflections are also a chance to congratulate your team members and truly make them feel appreciated. However, simply reflecting is not enough to remain effective. The team must be willing to implement changes found throughout the reflection process. Being adaptable to change is what makes agile teams thrive.",
    "author": "Kaleb Dean",
    "url": "/it-project-management/pages/12-agile-principles.html",
    "keywords": ["sprint0", "agile"]
  },
  {
    "title": "When to use or not use Agile",
    "img": "Waterfall-VS-Agile.jpg",
    "content": "Agile is an effective approach to software development that has its perks when utilized correctly. Organizations and companies must know the importance of when to use or not use the principles of Agile into their products. Using the methodology when unnecessary can lead to a waste of time and resources for the organization (and vice versa). It is important to go over several of the reasons and scenarios on when to use and not use Agile methodologies.   The first reason not to use Agile practices is if the project is not required to be completed in a timely manner and/or not as complex to complete. The methodologies of Agile are best suited for more complicated and larger projects that are demanded by the client. If the development team is working on a simple project, they would be better off adopting a Waterfall approach to completing the project. With simpler projects, there will be better defined goals and less changing requirements to deal with. The purpose of Agile is to make a neat and organized project development process that is highly adaptable to the ever-changing requirements made by the client. If the goal is clearly defined and given plenty of time to complete an assigned project, it is best to not utilize Agile approaches.  The team is not well-educated on Agile and/or the organization does not invest in teaching Agile methodology for their developers and managers. In order to effectively practice Agile methodologies, it is important that a well-versed team knows how to carry out the tasks of Agile. The process will require many crucial decisions made by team members, and if the team members are not well-versed or capable enough, it would cause catastrophe to the project or product. Agile requires constant collaboration between the client, management, development team, and anyone else involved in the project. One team that does not pull their own weight will greatly affect the quality of the final product.  It can be even worse if the organization does not invest its time and resources to train their teams about Agile methodologies. Some organizations have a preference for clients that prefer traditional development methodologies. If the organizations that do not practice Agile do land a client that wants to work in Agile, they will find that the resources and interaction base for a successful Agile project would be almost nonexistent.   The clients and teams are not wanting to partake in working together for the project or interested in using Agile for their project. The utilization of Agile needs interaction between clients and teams involved with the project. Teams are expected to give helpful feedback and updates about the project to the clients. Teams are also expected to work with each other frequently and provide feedback to help advance in the project. If the client is not available to work with the project teams or if the teams do not wish to frequently collaborate with each other, then it is best to use a different approach other than Agile to complete the project assigned. It is also important to know that project teams and clients may agree that Agile is not the best approach to completing a given project. There can be a variety of reasons to reject the use of Agile, whether it is due to personal reasons or clients that want to remain in control of their projects. It is imperative that Agile is not utilized where there is no use for the approach.  The last reason why utilizing Agile methodologies would not be ideal would be if the client requires approvals or documentation per increment of development. If the project teams are working with bureaucratic organizations or clients that strongly believe in other, more traditional methodologies, then it is best to not use Agile in these instances. Having to submit a detailed report of each cycle or stage of the development process would be best for supporting processes over an extended period of time. These scenarios would best work under the Waterfall approaches to completing projects, not Agile. Having to acquire approvals for each stage of the development process would mitigate any sort of momentum that is currently going for the project, so it is best to use more traditional approaches than Agile.   The first reason to use and practice Agile methodologies is that it reduces maintenance tasks. Agile reduces the amount of tasks required to support the product. These tasks may include testing and debugging of the product during the development process. If the teams are using traditional approaches to the product, these tasks can quickly increase just to keep pace with the timeline of the project. In Agile development, defects or other maintenance tasks are put into the product backlog. This backlog is reviewed during the sprint planning sessions held during the development process, which means new opportunities to resolve issues or add new features to the product. Agile can quickly adapt to any sort of changes that come throughout the development process. Agile development recognizes that the needs of the client can change over time and well-versed teams must be able to adapt to accommodate those changes. Teams would not have to wait on review or approval processes; they can just add tasks to the backlog and allocate those tasks when a new sprint comes based on the priorities and needs of the client.  The last reason why Agile development can be utilized is that the approach is an effective way to enhance project control. Teams collaborate with each other to find out what occurs in each sprint. This ensures that the collaborating teams are up to date and knows what tasks need to be completed at hand. Standup meetings are daily and ensure everyone knows the current state of the project, as well as the ability to address issues quickly. Lastly, teams are transparent with each other and can adapt quickly to changing circumstances, which result in the completion of maintenance tasks, higher client satisfaction, and a better quality product. Agile has its pros and cons that vary between projects. It is imperative that organizations and teams are aware of when to utilize Agile methodologies to complete projects, as it can lead to a better product all around or potentially ruin the final product based on given requirements.    Resources:  https://hygger.io/blog/when-not-to-use-agile/  https://www.h2kinfosys.com/blog/when-not-to-use-agile/",
    "author": "Daniel Cisneros Siliezar",
    "url": "/it-project-management/pages/use-agile.html",
    "keywords": ["sprint0", "agile"]
  },
  {
    "title": "Agile Vs Waterfall: Which methodology to choose?",
    "img": "Agile-vs-Waterfall-infographic.png",
    "content": "So you have got a team project and are planning to start working on it when you run into the decision of choosing which project management methodology you should use. Although there are many choices to choose from, the two popular choices are Agile and Waterfall. When it comes to deciding which methodology to choose from for your project, the choice is not always simple, since one will perform better for certain projects than others. Then how can one decide which one to use? In order to answer that question, we need to dive deeper into each methodology. The waterfall methodology is a more traditional and linear approach to project development, where the flow of the project stages is sequential and pre-determined. Waterfall is one of the original methods employed for projects. The method requires that all the project requirements and constraints are known from the beginning, before the project even starts. The Project Manager communicates with the users and the client to create a detailed understanding of the requirements of the project. Then, the project flows “down” different project phases including requirements, design, implementation, verification, and maintenance, in a sequence.  The waterfall methodology comes with its advantages, that include: Errors in design are caught before moving onto the software phase, thus saving time. Documentation is very easy and simple. The different stages of the methodology are predefined and easy to understand. Since requirements are already specified, testing and cost evaluation is much easier However, this methodology does have its limits, such as: Clients do not fully understand what they want. They may find it difficult to explain what they want or genuinely not know what they need until they see the application. It is very difficult and expensive to make changes to the application down the road. Once requirements are established in the beginning, there is not changing them.  The project can take longer to deliver as all stages must be completed before the application can be ready. Source: https://www.umsl.edu/~hugheyd/is6840/waterfall.html , https://www.wrike.com/project-management-guide/agile-methodology-basics/#agile-vs-waterfall-project-management It was due to these challenges with the Waterfall methodology, that new alternatives started emerging, with one of the most popular choices being the Agile methodology. An Agile methodology is an iterative form of project management, where the project is divided into “sprints”. Indeed, this methodology allows for changes in requirements throughout the life of the application as more information and feedback is received. A small part of conceptualizing, designing, developing and maintenance is included in every sprint. This also allows for a “minimum viable product” to be delivered, which is a pre-mature yet usable implementation of the application. This means that the project can be completed quicker as changes can easily be introduced in the next sprint. There are many different kinds of Agile methodologies, such as Scrum, Extreme Programming and Test-Driven Development, which are more popular than others. Scrum: Scrum, originally a rugby term abbreviated from scrummage, is a kind of methodology which makes use of stopping and restarting the project “sprints”. It has fairly short development cycles, commonly around 30 days. The output of each cycle should be a deliverable. Extreme Programming: Although extreme programming sounds like a programmer may be required to have an adrenaline rush while programming, its not so. Extreme programming is a highly change-based programming approach. A pair of programmers work together on implementing customer specifications early on. Then, the application is put through tests derived from the customer to see if it is satisfactory. Requirements determining is not as significant as requirements can easily be changed later on. It also dedicates a refactoring stage to make sure the code is free of unwanted functions that may be obsolete or otherwise not useful. Test-Driven Development: Test-driven development relies on tests to be written first before any actual production code. This means that when production code is written, the tests will fail any improper code immediately, and the code will be returned to be fixed. Like other Agile methodologies, the project is broken into short stages. This allows for more efficient and robust code, even though it may take more time as other agile approaches, since tests need to be designed before development. Also, code fixes during the new development period are easier to implement than if they were pushed during maintenance. Agile methodologies gained popularity thanks to their benefits, such as: ·         Much more flexible: allow for changes to occur early and later on without a high cost. ·         Speeds up development: allows the delivery of a product to be done earlier on and uses feedback to improve requirements. ·         More feedback means that there is a lesser risk of project failure. ·         Allows for innovation. Some issues surrounding the Agile approach are:  ·         Unclear requirements. The requirements are ever changing throughout the project process. ·         It may not be the best for larger projects. ·         It allows for process and communication conflicts.  Figure 1 shows how the different stages of the Waterfall and Agile methodologies compare. Now that you are acquainted with the aforementioned methodologies, how do you decide what to choose? We observe that for a given project, where one methodology lacks, another methodology has the potential to excel. The advantages and disadvantages of Waterfall and Agile methodologies is what helps determine which methodology to use in a given project. Larger, more distributed projects will benefit from using the Waterfall methodology, since Agile methodologies are weak for larger projects. Meanwhile, Agile projects will work wonderfully for relatively smaller projects, and better allow for innovation. If the requirements are well known in the beginning of the project, the Waterfall method may be a better option. On the other hand, if requirements are not well defined in the beginning, an Agile approach would be the way to go. Figure 2 compares the key differences between the Waterfall and Agile methodologies. Since in the world of project management there is no such methodology that is “one size fit all”, there are a variety of methodologies available to choose from, each with their own advantages and disadvantages. Therefore, in order to choose between Waterfall and Agile, all aspects of the project must be evaluated to determine which methodology suits it.",
    "author": "Irzem Ahmed",
    "url": "/it-project-management/pages/agile-vs-waterfall.html",
    "keywords": ["sprint0", "agile", "waterfall"]
  },
  {
    "title": "Benefits of Agile Methodology",
    "img": "benefits-agile.png",
    "content": "What is Agile? Agile is a methodology that is used in project management and software development. This methodology is an approach that can help teams take many iterative and incremental steps that can help create a project. These iterative and incremental steps are all short-term and produce a prototype after each cycle. During each cycle, there also will be more innovations for the project that makes each feature more efficient. There are many benefits to using the Agile methodology in a team setting.  How does Agile reduce risks? The first benefit is that it reduces a lot of risks. When a team is applying the Agile method, the theory is that it will never fail. When a project team is using Agile, they will be taking many small cycles called sprints where at the end of each sprint they deliver an unfinished product. With this in mind, the project will never fail and there are fewer risks taken because when you finish one sprint, you do a retrospective of what went well and what went wrong, with that information you can work more efficiently on the next sprint and reduce the number of risks and the chance for failure.  How does Agile increase customer satisfaction? The second benefit is that there will be an increase in customer satisfaction. When creating a product one of the most if not the most important thing is for the product to satisfy the customer. This is why Agile methodology includes customers in their decision-making process. By including customers in their decision-making process, they are able to understand what the product lacks and where they need to improve. Another way the customers are involved is when the company creates prototypes or demos for the customer to try and give feedback, with this feedback the product only becomes more efficient.  How does Agile increase adaptability? The third benefit of using Agile is increased adaptability. This means that when a company uses a methodology like a waterfall, they start with the planning and stick with that planning for the rest of the project. This hinders the project because if there were new innovations that come out, then the waterfall method would not be able to adapt those new innovations since in the planning phase those innovations were not involved. When it comes to Agile since there’s a cycle, once a sprint is done, in the next sprint you can incorporate those new innovations into that sprint which can not only save a lot of time and resources but also make the project more up to date if there are any needs to update in the future.  How does Agile increase team morale? The fourth benefit of using Agile is that it improves team morale. In Agile you are required to do sprint meetings with your project team, there are daily sprint meetings that happen at the start of the day to discuss what is done and what has to be done. During these meetings, the team members get to interact with each other and they learn and grow together due to these interactions. The team is much closer to each other and they are able to discuss any problem they have with their work and have a strong understanding that if they need help they have people that can help them. With this in mind, the team morale is always strong and the productivity of the team is very efficient.  How does Agile increase the quality of the product? The fifth benefit is that there is an increase in product quality when using Agile methodology. This goes back to how adaptable the Agile method is, when you keep doing this iterative process, the team together grows and learns more skills that will help with the project, and because it is an iterative process you can include those new skills to make the project work more efficiently. With each sprint, the team produces a kind of prototype that will have a lot of functionality that the final product will. Over many sprints, the quality of the product will only increase because there will be many additional innovations that will be talked about in the retrospective of each sprint. Other team members can also pitch in and share their thoughts and ideas to better the product in the next sprint. With this in mind, the product will only progress forwards rather than having many setbacks. The Agile method is made so that those setbacks that the team members can experience during the sprints will be brought up at the end of the sprint and can be discussed to fix the upcoming sprint by the other team members.  How does Agile increase visibility between the CEO and their teams? The sixth benefit of the Agile methodology is increased visibility. All increased visibility means that in a company/organization, the leaders of the company are able to see and know what is going on for each project management group and see if they have any feedback or inputs to give. In many organizations/companies, visibility is very important because the CEO or the leaders of the company are the ones making the decisions, and then the teams working for that company follow. When the leaders know what is going on, what is being worked on, and what will be worked on, the company's leadership will increase and the organization as a whole will be more strategic and coordinated. Everyone in the company will be able to benefit from this attribute since the leader will be able to make decisions that not only benefit the company but each and every individual that works for the company to make their upcoming projects successful. What are the main concepts of Agile?  All of the benefits listed will serve helpful to any company that adopts the Agile and methodology. When Agile is put into practice, the company as a whole will be able to benefit from its concepts. These concepts in Agile are mainly based on things like bettering quality, constantly improving the project in every iteration, and being flexible to the changes that happen within and outside of the company, in terms of technological improvements and the transparency where people from the CEO of the company to the customers of the product all know what is going on during these projects. The Agile methodology makes it so that the customers can test out the product and give feedback, all while involving the CEO so they can make smarter decisions that will only benefit the company as a whole.  Resources https://kissflow.com/project/agile/benefits-of-agile/ https://www.planview.com/resources/guide/agile-methodologies-a-beginners-guide/benefits-agile/ https://www.atlassian.com/agile",
    "author": "Shawn Kiruba",
    "url": "/it-project-management/pages/benefits-agile.html",
    "keywords": ["sprint0", "agile"]
  }
]